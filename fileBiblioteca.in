
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve



Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve

Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve
exemplo 2: cópia de arquivo
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
char block[1024];
int in, out;
int nread;
in = open("file.in", O_RDONLY);
out = open("file.out", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
while((nread = read(in,block,sizeof(block))) > 0)
write(out,block,nread);
return(0);
}
Biblioteca padrão - stdio
* stdio.h
* parte do ANSI standard C
• não são syscalls (syscall pertencem ao SO)
 interface versátil para syscall de baixo níve





